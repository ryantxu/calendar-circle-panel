version: 2.1

parameters:
  ssh-fingerprint:
    type: string
    default: ${GITHUB_SSH_FINGERPRINT}

aliases:
  # Workflow filters
  - &filter-only-master
    branches:
      only: master
  - &filter-only-release
    branches:
      only: /^v[1-9]*[0-9]+\.[1-9]*[0-9]+\.x$/

workflows:
  plugin_workflow:
    jobs:
      - build

executors:
  default_exec: # declares a reusable executor
    docker:
      - image: srclosson/grafana-plugin-ci-alpine:latest
  e2e_exec:
    docker:
      - image: srclosson/grafana-plugin-ci-e2e:latest

jobs:
  build:
    executor: default_exec
    steps:
      - checkout
      - restore_cache:
          name: restore node_modules
          keys:
          - build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            mkdir ci
            [ -f ~/project/node_modules/.bin/grafana-toolkit ] || yarn install --frozen-lockfile
            rm -rf ~/project/node_modules/@grafana/data/node_modules
      - save_cache:
          name: save node_modules
          paths:
            - ~/project/node_modules
          key: build-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build and test frontend
          command: |
            rm -rf ~/node_modules/@grafana/data/node_modules
            ./node_modules/.bin/grafana-toolkit plugin:ci-build
      - run:
          name: Build backend
          command: |
            mage -v buildAll
            mage -v lint
            mage -v coverage
      - run:
          name: Move results to ci folder
          command: |
            ls -l
            ./node_modules/.bin/grafana-toolkit plugin:ci-build --finish
      - run:
          name: Package distribution
          command: |
            ./node_modules/.bin/grafana-toolkit plugin:ci-package
      - run:
          name: Toolkit report
          command: |
            ~/project/node_modules/.bin/grafana-toolkit plugin:ci-report
      - store_artifacts:
          path: ci/packages/
      - store_artifacts:
          path: ci/report.json
      - store_artifacts:
          path: ci/jobs/build/coverage/
